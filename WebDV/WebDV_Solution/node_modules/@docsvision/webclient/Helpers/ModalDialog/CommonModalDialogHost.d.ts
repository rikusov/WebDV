import { $DialogManagement } from '@docsvision/webclient/Helpers/ModalDialog/$DialogManagement';
import { Props } from '@docsvision/webclient/Helpers/ModalDialog/CommonModalDialog';
import React from 'react';
/** Вспомогательный класс для отрисовки {@link CommonModalDialog} в {@link ModalHost}. */
export declare class CommonModalDialogHost {
    dialogProps: Partial<Props>;
    renderCallback: () => React.ReactNode;
    onAcceptCallback?: () => JQueryDeferred<void>;
    onCancelCallback?: () => JQueryDeferred<void>;
    private modalHost;
    private resolve;
    private reject;
    private _service;
    private contentDiv;
    private isCancelled;
    constructor(className: string, dialogProps?: Partial<Props>, renderCallback?: () => React.ReactNode, onAcceptCallback?: () => JQueryDeferred<void>, onCancelCallback?: () => JQueryDeferred<void>);
    forceUpdate(callback?: Function): JQueryDeferred<void>;
    isMounted(): boolean;
    readonly service: $DialogManagement;
    cancel: () => Promise<void>;
    accept: () => Promise<void>;
    showDialog(): JQueryDeferred<unknown>;
    mount(): JQueryDeferred<void>;
    fixateHeight(): void;
    unfixateHeight(): void;
    private render;
}
