import { IBasicEvent } from "@docsvision/webclient/System/IBasicEvent";
import { IEventArgs } from "@docsvision/webclient/System/IEventArgs";
/** @internal */
export declare enum BubblingEventResult {
    Continue = 0,
    StopPropagation = 1
}
/** @internal */
export interface IBubblingEventInfo {
    name?: string;
    bubbling: boolean;
}
/** @internal */
export declare type BubblingEventCallback = (actualSender: ISupportEventBubbling, args: IEventArgs) => BubblingEventResult | void;
/** @internal */
export interface ISupportEventBubbling {
    supportEventBubbling: boolean;
    getEventInfo<T>(event: IBasicEvent<T>): IBubblingEventInfo;
    triggerBubblingEvent<T>(eventName: string, actualSender: ISupportEventBubbling, args: T): any;
    subscribeToBubblingEvent(eventName: string, callback: BubblingEventCallback): any;
    unsubscribeFromBubblingEvent(eventName: string, callback: BubblingEventCallback): any;
}
