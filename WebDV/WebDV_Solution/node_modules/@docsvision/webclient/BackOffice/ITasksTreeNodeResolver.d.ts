/// <reference types="react" />
import { ITasksTreeNodeContainer } from "@docsvision/webclient/BackOffice/ITasksTreeNodeContainer";
import { ITasksTreeContainerProps } from "@docsvision/webclient/BackOffice/ITasksTreeContainerProps";
import { ITasksTreeContainerState } from "@docsvision/webclient/BackOffice/ITasksTreeContainerState";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { ITasksTreeGroupMap } from '@docsvision/webclient/BackOffice/ITasksTreeGroupMap';
import { ITasksTreeColorMap } from '@docsvision/webclient/BackOffice/ITasksTreeColorMap';
export interface IRenderHelpBoxNodeInfo {
    group: string;
    helpModel: GenModels.TreeNodeHelpModel;
    subtaskCount: number;
    doneSubtaskCount: number;
}
export interface IRenderHelpBoxOptions {
    /** Группы. */
    groups: ITasksTreeGroupMap;
    /** Список опций для VIS.js. */
    colors: ITasksTreeColorMap;
    helpBoxDelegationExpanded: boolean;
    helpBoxDelegationClick: (e: React.MouseEvent<any>) => void;
}
/** @internal */
export interface ITasksTreeNodeResolver {
    resolveNode(treeNodeModel: GenModels.TreeNodeModel, props: ITasksTreeContainerProps, state: ITasksTreeContainerState): ITasksTreeNodeContainer[];
    resolveRenderHelpBox(nodeInfo: IRenderHelpBoxNodeInfo, options: IRenderHelpBoxOptions): React.ReactNode;
    selectionAllowed: boolean;
}
