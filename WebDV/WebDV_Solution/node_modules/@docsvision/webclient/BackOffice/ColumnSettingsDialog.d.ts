import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { ISortableItem } from '@docsvision/webclient/Helpers/Sortable/Data/ClientModels/ISortableItem';
import React from 'react';
export interface Props {
    linkColumns: GenModels.LinksColumnsConfiguration;
    defaultLinkColumns: GenModels.LinksColumnsConfiguration;
    onAccept: (linkColumns: GenModels.LinksColumnsConfiguration) => void;
    onCancel: () => void;
}
export interface State {
    order: string[];
    items: ISortableItem<GenModels.LinkColumnDescription>[];
}
export declare class ColumnSettingsDialog extends React.Component<Props, State> {
    state: State;
    constructor(props: Props);
    static Show(linkColumns: GenModels.LinksColumnsConfiguration, defaultLinkColumns: GenModels.LinksColumnsConfiguration): JQueryDeferred<GenModels.LinksColumnsConfiguration>;
    loadItems(linkColumns: GenModels.LinksColumnsConfiguration): ISortableItem<GenModels.LinkColumnDescription>[];
    onColumnChecked(column: GenModels.LinkColumnDescription, ev: React.ChangeEvent<HTMLInputElement>): void;
    onMoveColumnUp(column: GenModels.LinkColumnDescription): void;
    onMoveColumnDown(column: GenModels.LinkColumnDescription): void;
    canMoveUp(column: GenModels.LinkColumnDescription): boolean;
    canMoveDown(column: GenModels.LinkColumnDescription): boolean;
    onResetSettings: () => void;
    onReorder: (newOrder: any, sortedItems: any) => void;
    onAccept: () => void;
    render(): JSX.Element;
}
