import { IPartnerDataLoadingEventArgs } from "@docsvision/webclient/BackOffice/IPartnerDataLoadingEventArgs";
import { PartnerDirectoryBaseImpl, PartnerDirectoryBaseState } from "@docsvision/webclient/BackOffice/PartnerDirectoryBaseImpl";
import { $DepartmentController, $LayoutController, $LayoutPartnerController, $LayoutRowController, $LayoutStaffController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { DirectoryBase, DirectoryBaseParams } from '@docsvision/webclient/System/DirectoryBase';
import { $EditOperationStore, $LayoutInfo } from "@docsvision/webclient/System/LayoutServices";
import { $LocationContainerControlServices } from '@docsvision/webclient/System/LocationContainerControl';
import { BasicApiEvent, CancelableApiEvent } from "@docsvision/webclient/System/ApiEvent";
declare type ValueT = GenModels.DepartmentModel | GenModels.EmployeeDataModel;
declare type NodeT = GenModels.DepartmentModel;
declare type ItemT = GenModels.EmployeeDataModel;
/**
 * Содержит публичные свойства элемента управления [Сотрудник контрагента]{@link Partner}.
 */
export declare class PartnerDirectoryBaseParams<T extends ValueT> extends DirectoryBaseParams<T, NodeT, ItemT> {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Формат отображения информации о выбранном сотруднике в контроле. */
    partnerViewMode?: GenModels.EmployeeViewMode;
    /** Формат отображения информации о выбранном сотруднике во всплывающей подсказке. */
    partnerTipMode?: GenModels.PartnerTipModeItems;
    /** Доступен ли интерфейс редактиррования справочника. */
    allowDirectoryEdit?: boolean;
    /**
     * Событие, возникающее перед выполнением поиска записей на сервере. В обработчике события можно изменить параметры запроса.
     * Если в обработчике задать значение result, то запрос на сервер выполнен не будет.
     */
    searchResultsLoading?: CancelableApiEvent<IPartnerDataLoadingEventArgs>;
    /** Событие, возникающее после выполнения поиска записей на сервере. В обработчике события можно изменить возвращенные данные. */
    searchResultsLoaded?: BasicApiEvent<IPartnerDataLoadingEventArgs>;
    services?: $LayoutPartnerController & $EditOperationStore & $LayoutInfo & $LayoutRowController & $LayoutController & $LocationContainerControlServices & $LayoutStaffController & $DepartmentController;
}
/**
 * Класс элемента управления Сотрудник контрагента.
 *
 * Добавляет в web-разметку поле ввода с кнопкой вызова диалогового окна для выбора записи из *Справочника сотрудников* или *Справочника контрагентов*.
 */
export declare abstract class PartnerDirectoryBase<T extends ValueT, ParamsT extends PartnerDirectoryBaseParams<T> = PartnerDirectoryBaseParams<T>, StateT extends PartnerDirectoryBaseState<T> = PartnerDirectoryBaseState<T>> extends DirectoryBase<T, NodeT, ItemT, ParamsT, StateT> {
    /** @internal */
    protected getServices(): $LayoutPartnerController & $EditOperationStore & $LayoutInfo & $LayoutRowController & $LayoutController & Partial<$LayoutController> & 
import("C:/WebCP/Bin/TypeScriptDefinitions/System/Services/$LayoutManager").$LayoutManager & Partial<
import("C:/WebCP/Bin/TypeScriptDefinitions/System/Controls/Layout/LayoutServices").$CurrentLocation> & $LayoutStaffController & $DepartmentController;
    /** @internal */
    protected readonly partnerImpl: PartnerDirectoryBaseImpl<T>;
    init(): Promise<void>;
    /** @internal */
    protected partnerTipMode: GenModels.PartnerTipModeItems;
    /** @internal */
    protected partnerViewMode: GenModels.EmployeeViewMode;
}
export {};
