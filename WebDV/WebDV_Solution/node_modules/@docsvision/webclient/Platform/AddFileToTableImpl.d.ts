import { Table } from '@docsvision/webclient/Platform/Table';
import { AddFileToTableParams } from '@docsvision/webclient/Platform/AddFileToTable';
import { BaseControlState } from "@docsvision/webclient/System/BaseControl";
import { BaseControlImpl } from "@docsvision/webclient/System/BaseControlImpl";
import { BooleanState } from '@docsvision/webclient/System/BooleanState';
import { EventEmitter } from '@docsvision/webclient/System/EventEmitter';
import React from "react";
/** @internal */
export interface AddFileToTableState extends AddFileToTableParams, BaseControlState {
    loading: boolean;
}
/** @internal */
export declare type AddFileToTableImplState = AddFileToTableState;
/** @internal */
export declare class AddFileToTableImpl extends BaseControlImpl<AddFileToTableParams, AddFileToTableState> {
    table: Table;
    fileInput: HTMLInputElement;
    fileEvents: EventEmitter;
    dragOverState: BooleanState;
    defaultTip: string;
    constructor(props: AddFileToTableParams, state: AddFileToTableState);
    performClick(event?: React.MouseEvent<any>): void;
    protected onFileDrop: (files: FileList, sender?: HTMLInputElement) => JQueryDeferred<Promise<void>>;
    protected onInputFileDrop: (files: FileList, sender?: HTMLInputElement) => Promise<void>;
    attachFileInput: (input: HTMLInputElement) => void;
    onDropAreaClick: (ev: React.MouseEvent<Element, MouseEvent>) => void;
    isEmptyMode: () => boolean;
    renderDragAndDropArea(tableChildren: any): any;
    /** Переопределяет базовый метод, отменяя его логику (для данного контрола она отлична от базовой версии). */
    protected handleClick(event: React.MouseEvent<any>): void;
    renderControl(): JSX.Element;
}
