/// <reference types="react" />
import { ITableWrapper } from '@docsvision/webclient/Platform/ITableWrapper';
import { Table } from '@docsvision/webclient/Platform/Table';
import { AddFileToTableImpl, AddFileToTableState } from '@docsvision/webclient/Platform/AddFileToTableImpl';
import { IFileEventArgs } from '@docsvision/webclient/Platform/IFileEventArgs';
import { $DeviceType } from '@docsvision/webclient/StandardServices';
import { BaseControl, BaseControlParams } from "@docsvision/webclient/System/BaseControl";
import { $EditOperationStore } from "@docsvision/webclient/System/LayoutServices";
import { BasicApiEvent, CancelableApiEvent } from '@docsvision/webclient/System/ApiEvent';
import { $MessageBox } from '@docsvision/webclient/System/$MessageBox';
/**
 * Содержит публичные свойства элемента управления [Кнопка]{@link AddFileToTable}.
 */
export declare class AddFileToTableParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Текст всплывающей подсказки. */
    tip?: string;
    /** Имя CSS класса, в котором определен путь к иконке, отображаемой в Кнопке. */
    iconClass?: string;
    /** Флаг, определяющий, что Кнопка может быть нажата: true - разрешено (разрешена настроенная операция редактирования), false - не разрешено. */
    canClick?: boolean;
    /** Текст, который будет отображаться в области для перетаскивания. */
    dragAndDropPlaceHolder?: string;
    /** Доступно ли перетаскивание файлов в область таблицы. */
    dragAndDropEnabled?: boolean;
    filesAdding?: CancelableApiEvent<IFileEventArgs>;
    filesAdded?: BasicApiEvent<IFileEventArgs>;
    services?: $EditOperationStore & $DeviceType & $MessageBox;
}
/**
 * Класс элемента управления реализующего операцию множественного добавления файлов в таблицу с файлами.
 */
export declare class AddFileToTable extends BaseControl<AddFileToTableParams, AddFileToTableState> implements ITableWrapper {
    renderTableWrapper(tableElements: JSX.Element): any;
    initializeTableOperation(table: Table): void;
    readonly isTableWrapper: boolean;
    readonly isTableOperation: boolean;
    /** @internal */
    protected createParams(): AddFileToTableParams;
    private bindingEditOperation;
    /** @internal */
    protected createImpl(): AddFileToTableImpl;
}
