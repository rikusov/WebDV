import { $FilePickerController, $LayoutFileController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { ModalHost } from '@docsvision/webclient/Helpers/ModalHost';
import { $FileController } from '@docsvision/webclient/Legacy/FileController';
import { FilePickerOperations } from '@docsvision/webclient/Platform/FilePickerOperations';
import { FilePickerOperationsAvailability } from '@docsvision/webclient/Platform/FilePickerOperationsAvailability';
import { $FileDownload } from '@docsvision/webclient/Platform/$FileDownload';
import { $WindowLocation } from '@docsvision/webclient/Platform/$WindowLocation';
import { $CardId } from '@docsvision/webclient/System/LayoutServices';
import { RequestHelper } from '@docsvision/webclient/System/RequestHelper';
import { EventEmitter } from '@docsvision/webclient/System/EventEmitter';
import React from 'react';
export interface IFileVersionDialogProps {
    file: GenModels.FileCardModel;
    onClose: () => void;
    onFileVersionsLoaded: (fileModel: GenModels.FileCardModel) => void;
    downloadEvents: EventEmitter;
    previewEvents: EventEmitter;
    logInfo: GenModels.LogInfo;
    availability: FilePickerOperationsAvailability;
    operations: FilePickerOperations;
    services: $FilePickerController & $WindowLocation & $FileController & $LayoutFileController & $CardId & $FileDownload;
}
export interface IFileVersionDialogState {
    versionsLoading: RequestHelper;
}
export declare class FileVersionDialog extends React.Component<IFileVersionDialogProps, IFileVersionDialogState> {
    state: IFileVersionDialogState;
    constructor(props: any);
    static Show(openVersionsDialogEvents: EventEmitter, closeVersionsDialogEvents: EventEmitter, getProps: () => Omit<IFileVersionDialogProps, "onClose">): JQueryDeferred<Promise<ModalHost>>;
    componentDidMount(): void;
    onDownloadClick: (version: GenModels.FileCardVersionModel) => void;
    onVersionClick: (version: GenModels.FileCardVersionModel) => void;
    renderContent(): JSX.Element;
    renderLoading(): JSX.Element;
    render(): JSX.Element;
}
