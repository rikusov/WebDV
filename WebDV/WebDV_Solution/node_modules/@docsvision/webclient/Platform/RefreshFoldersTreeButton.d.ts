/// <reference types="react" />
import { $LayoutFolderController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { $Sidebar } from "@docsvision/webclient/Legacy/$Sidebar";
import { BaseControl, BaseControlParams, BaseControlState } from "@docsvision/webclient/System/BaseControl";
import { ControlImpl } from '@docsvision/webclient/System/ControlImpl';
import { $ControlStore } from "@docsvision/webclient/System/LayoutServices";
import { $Router } from "@docsvision/webclient/System/$Router";
/**
 * Содержит публичные свойства элемента управления {@link RefreshFoldersTreeScript}.
 */
export declare class RefreshFoldersTreeButtonParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Текст всплывающей подсказки. */
    tip?: string;
    /** Имя CSS класса, в котором определен путь к иконке, отображаемой в Кнопке. */
    iconClass?: string;
    services?: $ControlStore & $Sidebar & $LayoutFolderController & $Router;
}
/** @internal */
export interface RefreshFoldersTreeButtonState extends RefreshFoldersTreeButtonParams, BaseControlState {
    isAvailable: boolean;
}
/**
 * Класс для связывания кнопки настройки главного меню с пользовательскими папками
 */
export declare class RefreshFoldersTreeButton extends BaseControl<RefreshFoldersTreeButtonParams, RefreshFoldersTreeButtonState> {
    private performOnce;
    createParams(): RefreshFoldersTreeButtonParams;
    createImpl(): ControlImpl;
    /** @internal */
    init(): void;
    /** @internal */
    protected onRefreshFoldersClick: () => void;
    private refreshFolders;
    /** @internal */
    protected refreshRoute(): JQueryDeferred<unknown>;
    renderControl(): JSX.Element;
}
