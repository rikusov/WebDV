import { GridOptions } from "@docsvision/webclient/Legacy/GridOptions";
import { SimpleEvent } from "@docsvision/webclient/System/SimpleEvent";
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
/** @internal */
export interface IGridHtmlBuilder {
    getModel: () => any;
    refreshed: SimpleEvent<void>;
    modelChanged: SimpleEvent<any>;
    selectionChanged: SimpleEvent<any>;
    rowsSelectionModeChanged: SimpleEvent<boolean>;
    buildGrid(model: GenModels.GridViewModel, targetElement: HTMLElement, rootElement: HTMLElement): void;
    rebuildIfNeeded(isBuild: boolean, model?: GenModels.GridViewModel): void;
    buildTableBody(options: GridOptions, tableBodyContainer: HTMLElement): void;
    buildTableHeader(options: GridOptions, tableHeaderContainer: HTMLElement, modelGrid?: GenModels.GridViewModel): void;
    buildGridFooter(options: GridOptions, gridFooterContainer: HTMLElement): void;
    buildFilters(options: GridOptions): void;
    applyGridFilter(): void;
    buildHeader(options: GridOptions, targetElement: HTMLElement, rootElement: HTMLElement): any;
    getChanges(): Promise<any>;
    showUpdateRequest(show: boolean): any;
    closeUpdateRequest(): any;
    rowsSelectionMode: boolean;
    getSelection(): any;
    clearSelection(cardIds?: string[]): any;
    reload(): JQueryDeferred<GenModels.GridViewModel>;
}
