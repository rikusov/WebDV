/// <reference types="react" />
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { BaseRazorControl, BaseRazorControlParams, BaseRazorControlState } from "@docsvision/webclient/Legacy/BaseRazorControl";
import { $Layout } from '@docsvision/webclient/System/$Layout';
import { $EditOperationStore, $LayoutInfo } from '@docsvision/webclient/System/LayoutServices';
import { CancelableApiEvent } from '@docsvision/webclient/System/ApiEvent';
import { ICardStateChangingEventArgs } from '@docsvision/webclient/System/ICardStateChangingEventArgs';
export declare class Params extends BaseRazorControlParams {
    standardCssClass?: string;
    /** Список операций. */
    operations: GenModels.OperationDataModel[];
    /** Определяет расположение кнопок - в строку (false) или в столбик (true). */
    verticalOrientation: boolean;
    cardStateChanged?: CancelableApiEvent<ICardStateChangingEventArgs>;
    services: $LayoutInfo & $Layout & $EditOperationStore;
}
export interface State extends Params, BaseRazorControlState {
}
/** @internal */
export declare class TaskGroupOperationsRazorControl extends BaseRazorControl<Params, State> {
    private operationBuiltins;
    private performOnce;
    protected razorContainer: HTMLElement;
    protected construct(): void;
    protected createParams(): Params;
    private bindingStateButtons;
    mountRazorContent(razorContainer: HTMLElement): void;
    /** @internal */
    private triggerCardStateChanged;
    private hideAndRenameOperations;
    /** @internal */
    private processEditOperations;
    /** @internal */
    private saveCardIfNeeded;
    /** @internal */
    renderControl(): JSX.Element;
}
