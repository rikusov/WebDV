import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { TableRowsSelectionModel } from '@docsvision/webclient/Platform/TableRowsSelectionModel';
import { SimpleEvent } from '@docsvision/webclient/System/SimpleEvent';
import { $GridController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
export declare class GridRowsSelectionLogic {
    private tableHeaderContainer;
    private tableBodyContainer;
    private getModel;
    private services;
    private selection;
    readonly selectionChanged: SimpleEvent<TableRowsSelectionModel>;
    initialize(tableHeaderContainer: HTMLElement, tableBodyContainer: HTMLElement, getModel: () => GenModels.GridViewModel, services: $GridController): void;
    createRowSelectionToggleColumn(model: GenModels.GridViewModel, rowIndex: number): HTMLTableDataCellElement;
    createHeaderSelectionToggleColumn(model: GenModels.GridViewModel): HTMLTableHeaderCellElement;
    private applySelection;
    private applyHeaderInputSelection;
    private rowSelected;
    private onHeaderSelectionCheckBoxChecked;
    private onRowSelectionCheckBoxChecked;
    onForceSelectRowCLick(e: MouseEvent): void;
    onMobileRowSelection(rowItem: HTMLElement, model: GenModels.GridViewModel): void;
    checkMobileRowSelected(rowId: string): boolean;
    onMobileRowCancelSelection(): void;
    private loadAllRows;
    getSelection(model?: GenModels.GridViewModel): TableRowsSelectionModel;
    clearSelection(cardIds?: string[]): void;
}
