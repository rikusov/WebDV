import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { GridOptions } from "@docsvision/webclient/Legacy/GridOptions";
import { IGridHtmlBuilder } from "@docsvision/webclient/Legacy/IGridHtmlBuilder";
import { SimpleEvent } from "@docsvision/webclient/System/SimpleEvent";
import { BasicEvent } from '@docsvision/webclient/System/BasicEvent';
import { IEventArgs } from '@docsvision/webclient/System/IEventArgs';
/** @internal */
export declare class Grid {
    private targetElement;
    private rootElement;
    private htmlBuilder;
    private gridModel;
    readonly model: GenModels.GridViewModel;
    update(m: GenModels.GridViewModel): void;
    readonly modelChanged: BasicEvent<IEventArgs>;
    readonly selectionChanged: BasicEvent<IEventArgs>;
    readonly rowsSelectionModeChanged: BasicEvent<IEventArgs>;
    getSelection(): any;
    clearSelection(cardIds?: string[]): any;
    options: GridOptions;
    constructor(element: HTMLElement, model: GenModels.GridViewModel, options: GridOptions, htmlBuilder: IGridHtmlBuilder);
    reload(): JQueryDeferred<GenModels.GridViewModel>;
    private onModelChange;
    private onSelectionChange;
    private onSelectionModeChange;
    private initialize;
    applyFilters(): void;
    /**
     * Возвращает загруженные с сервера новые данные грида
     */
    getChanges(): Promise<GenModels.GridViewModel>;
    /**
     * Визуальное уведомление о необходимости обновить грид
     */
    showUpdateRequest(show?: boolean): void;
    closeUpdateRequest(): void;
    readonly refreshed: SimpleEvent<void>;
    isSearching(): any;
    rowsSelectionMode: boolean;
}
/**
 * Is two grid models equal
 * @param model1 First grid model
 * @param model2 Second grid model
 * @param ignoreMeta Ignore meta data differences or not
 * @param ignoreReadStatus Ignore read status or not
 * @param paramsToCheck Row params to check on differences
 */
export declare function isEqual(model1: GenModels.GridViewModel, model2: GenModels.GridViewModel, ignoreMeta?: boolean, ignoreReadStatus?: boolean, paramsToCheck?: string[]): boolean;
