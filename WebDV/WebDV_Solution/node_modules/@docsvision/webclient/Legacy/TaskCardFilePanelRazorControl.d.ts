/// <reference types="react" />
import { $LayoutCardController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { BaseRazorControl, BaseRazorControlParams, BaseRazorControlState } from "@docsvision/webclient/Legacy/BaseRazorControl";
import { $Layout } from "@docsvision/webclient/System/$Layout";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import { RequestHelper } from "@docsvision/webclient/System/RequestHelper";
import { IRealTimeCommunicationMessage } from '@docsvision/webclient/System/IRealTimeCommunicationMessage';
import { $Router } from '@docsvision/webclient/System/$Router';
import { $LayoutInfo, $CardTimestamp } from '@docsvision/webclient/System/LayoutServices';
/** @internal */
export declare class TaskCardFilePanelParams extends BaseRazorControlParams {
    services?: $LayoutCardController & $Layout & $Router & $LayoutInfo & $CardTimestamp;
}
/** @internal */
export interface TaskCardFilePanelState extends TaskCardFilePanelParams, BaseRazorControlState {
    documents: string[];
    requestHelper: RequestHelper;
}
/** @internal */
export declare class TaskCardFilePanelRazorControl extends BaseRazorControl<TaskCardFilePanelParams, TaskCardFilePanelState> {
    protected construct(): void;
    loadFilesAsync(): JQueryDeferred<unknown>;
    protected createParams(): TaskCardFilePanelParams;
    init(): void;
    mountRazorContent(razorContainer: HTMLElement): void;
    protected onCardChanged: (message: IRealTimeCommunicationMessage<any>) => void;
    protected getBindings(): IBindingResult<any>[];
    getDisclosureHeader(): string;
    renderControl(): JSX.Element;
}
